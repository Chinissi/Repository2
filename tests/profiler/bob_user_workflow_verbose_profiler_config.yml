# Note the call to Profiler.profile() takes multiple batches
# Unless filtered / specified this list of batches will be used for all metrics/parameters
variables:
  # TODO: Do we plan to support lists or mappings in variables?
#  vendor_ids:
#    - 1
#    - 2
#    - 4
  max_vendor_id: 4
  max_amount: 99999
  false_positive_threshold: 0.01
rules:
  my_rule_for_ids:
    class_name: Rule
    module_name: great_expectations.profiler.rule.rule
    domain_builder:
      class_name: SimpleColumnSuffixDomainBuilder
      module_name: great_expectations.profiler.domain_builder.simple_column_suffix_domain_builder
      column_name_suffixes:
        - _id
        - _type
    parameter_builders:
      - name: my_value_set_for_ids
        # NOTE: This parameter is meant to be the union of all observed batch value_sets
        class_name: MultiBatchParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.multi_batch_parameter_builder
        metric_domain_kwargs: $domain.domain_kwargs
        # TODO: how to specify compute over all batches (e.g. use all batches in parameter) - options:
        # don't specify a specific batch_request and assume all batches passed via the various methods to Profiler.profile()?
#        batch_request: $batch.batch_id
        metric_name: column.distinct_values
    expectation_configuration_builders:
      - expectation_type: expect_column_values_to_be_in_set
        column: $domain.domain_kwargs.column
        # TODO: How exactly to reference the value_set?
        value_set: $my_value_set_for_ids.counts

  my_rule_for_amounts:
    # expect_column_values_to_be_between for each of the _amount columns
    class_name: Rule
    module_name: great_expectations.profiler.rule.rule
    domain_builder:
      class_name: SimpleColumnSuffixDomainBuilder
      module_name: great_expectations.profiler.domain_builder.simple_column_suffix_domain_builder
      column_name_suffixes:
        - _amount
    # Parameter used later in expectation that current batch mean is within 20% of mean of all months in last year - parameter calculates mean of all batches in the previous full year
    parameter_builders:
      - name: my_mean_parameter_for_batches_in_previous_full_year
        # TODO: Implement MultiBatchAggregateMetricParameterBuilder which takes a metric name and list of batches, computes aggregate over all batches by either: 1. merging them into one batch or 2. if linear computes it from single batch aggregate metrics / metadata. E.g. mean of means
        class_name: MultiBatchAggregateMetricParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.multi_batch_metric_parameter_builder
        batch_request:
          # Filter for batches for previous full year
          #  using batch_filter_parameters with `year` as one of the parameters
          #  `year` needs to be defined as a group by the data_connector
          # TODO: is this possible - how do we specify a data_connector (when calling Profiler.profile()?)?
          batch_filter_parameters:
            year: 2020 # TODO: Can this be relative?
        metric_configuration:
          metric_name: column.mean
          # Domain kwargs here refer to the current domain being processed - the list of domains coming from the DomainBuilder (here the list of columns filtered by SimpleColumnSuffixDomainBuilder)
          metric_domain_kwargs: $domain.domain_kwargs
    expectation_configuration_builders:
      - expectation_type: expect_column_values_to_be_between
        class_name: DefaultExpectationConfigurationBuilder
        module_name: great_expectations.profiler.expectation_configuration_builder.default_expectation_configuration_builder
        # TODO: Do we support literals here or must this be defined in variables?
        min_value: 0
        max_value: $variables.max_user_id
        column: $domain.domain_kwargs.column
      - expectation_type: expect_column_mean_to_be_between
        class_name: DefaultExpectationConfigurationBuilder
        module_name: great_expectations.profiler.expectation_configuration_builder.default_expectation_configuration_builder
        column: $domain.domain_kwargs.column
        min_value: $my_mean_parameter_for_batches_in_previous_full_year.parameter.mean * 0.8
        max_value: $my_mean_parameter_for_batches_in_previous_full_year.parameter.mean * 1.2

  my_rule_for_numeric_data:
    class_name: Rule
    module_name: great_expectations.profiler.rule.rule
    domain_builder:
      class_name: SimpleSemanticTypeColumnDomainBuilder
      module_name: great_expectations.profiler.domain_builder.simple_semantic_type_domain_builder
      semantic_types:
        - numeric
    parameter_builders:
      # NOTE: These parameter_builders are from https://github.com/superconductive/design/blob/main/docs/20201203_profiling.md
      # NOTE: my_column_mean and my_column_min are added as parameters but unused in expectation_configuration_builders - this is OK
      # TODO: Should we warn users if there are unused ParameterBuilders in a Profiler configuration?
      - name: my_column_mean
        class_name: MetricParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.metric_parameter_builder
        metric_name: column.mean
        metric_domain_kwargs: $domain.domain_kwargs
      - name: my_column_min
        class_name: MetricParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.metric_parameter_builder
        metric_name: column.min
        metric_domain_kwargs: $domain.domain_kwargs
      - name: my_column_max
        class_name: MetricParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.metric_parameter_builder
        metric_name: column.max
        metric_domain_kwargs: $domain.domain_kwargs

        # TODO: I don't totally understand the following parameters, and there is likely work to be done to make MultiBatchBootstrappedMetricDistributionParameterBuilder work as intended.
        # for example,
        # 1. why does false_positive_threshold_min have the metric_configuration
        # mapping instead of passing metric_name and metric_domain_kwargs (this can be changed easily)
        # 2. MultiBatchBootstrappedMetricDistributionParameterBuilder does not have a metric_domain_kwargs param
        # 3. MultiBatchBootstrappedMetricDistributionParameterBuilder takes a list of batch_ids and a batch_request. The way that batch_ids seems to work in other areas is as a filter (e.g. the batch_request returns some batches and we filter to only those contained in the list batch_ids, if batch_ids is None then we use all batches) whereas here it seems meant to add to the batches from the batch_request (maybe just a param name change to clarify e.g. `additional_batch_ids`)

      - name: false_positive_threshold_min
        class_name: MultiBatchBootstrappedMetricDistributionParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.multi_batch_bootstrapped_metric_distribution_parameter_builder
        # TODO: Not sure I understand the comment here - why would we want to add the batches from the call to profile? Wouldn't we expect that this parameter is calculated just from the explicitly defined batch_request below? (if this is useful, maybe there are two modes)
        batch_request: # this should be unioned with the rest of the batch request from the call to profile
          partition_request:
            # NOTE: interpreted like python slices e.g. most recent 10 batches
            partition_index: "-10:"
        metric_configuration:
          metric_name: column.min
          # TODO: Are these metric_domain_kwargs referencing the current domain being processed when evaluating the rule (and then will be processed on that domain for each of the last 10 batches)?
          metric_domain_kwargs: $domain.domain_kwargs
        p_values:
          min_value: $variables.false_positive_threshold
          max_value: 1.0
        # TODO: Question: does this false_positive_threshold_min parameter produce a distribution of the column min based on the most recent 10 batches where the p_values sets the resulting min and max acceptable values for the column min? For example if the p_values are not set, then the min is the lowest min of any batch and the max is the highest min of any batch.

      - name: quantile_ranges
        class_name: MultiBatchBootstrappedMetricDistributionParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.multi_batch_bootstrapped_metric_distribution_parameter_builder
        batch_request:
          partition_request:
            partition_index: "-10:"
        metric_configuration:
          metric_name: column.quantile_values
          metric_domain_kwargs: $domain.domain_kwargs
          metric_value_kwargs:
            quantiles:
              - 0.05
              - 0.25
              - 0.50
              - 0.75
              - 0.95
        p_values:
          min_value: ($variables.false_positive_threshold / 2)
          max_value: 1 - ($variables.false_positive_threshold / 2)
        # TODO: Question: does this parameter produce a distribution of the column quantile values for each of the quantiles listed based on the most recent 10 batches where the p_values sets the resulting min and max acceptable values for each of the quantiles? For example if the p_values are not set, then the quantile range is between the smallest observed value for that quantile in any of the latest 10 batches and the largest observed value for that quantile in any of the latest 10 batches?

      - name: quantiles
        class_name: MetricParameterBuilder
        module_name: great_expectations.profiler.parameter_builder.metric_parameter_builder
        metric_name: column.quantile_values
        metric_domain_kwargs: $domain.domain_kwargs
        metric_value_kwargs:
          quantiles:
            - 0.05
            - 0.25
            - 0.50
            - 0.75
            - 0.95
        # TODO: Question: does this parameter_builder produce an actual value for each of the quantiles for the domain that is currently being processed (for the batch that is currently being processed)?

    expectation_configuration_builders:
      - expectation_type: expect_column_min_to_be_between
        class_name: DefaultExpectationConfigurationBuilder
        module_name: great_expectations.profiler.expectation_configuration_builder.default_expectation_configuration_builder
        min_value: $false_positive_threshold_min.parameter.min_value
        max_value: $false_positive_threshold_min.parameter.max_value
      - expectation_type: expect_column_quantile_values_to_be_between
        class_name: DefaultExpectationConfigurationBuilder
        module_name: great_expectations.profiler.expectation_configuration_builder.default_expectation_configuration_builder
        quantiles:
          - 0.05
          - 0.25
          - 0.50
          - 0.75
          - 0.95
        # TODO: Is this the way to refer to the value_ranges? Should it not be $quantile_ranges.parameter.ranges to be consistent with other parameters?
        value_ranges: $quantile_ranges
      - expectation_type: expect_column_max_to_be_between
        class_name: DefaultExpectationConfigurationBuilder
        module_name: great_expectations.profiler.expectation_configuration_builder.default_expectation_configuration_builder
        min_value: 0.9 * $my_column_max.parameter.max
        max_value: 1.1 * $my_column_max.parameter.max


  # TODO: Reference specific batch (index or name) / filter batches
  # TODO: rule or expectation_configuration based on data from relative batch with relative expectation (Evaluation Parameter)
  # TODO: Are all permutations of the above TODOs possible?
