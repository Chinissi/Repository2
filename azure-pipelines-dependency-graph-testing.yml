# This file is responsible for configuring the `dependency_graph` pipeline (https://dev.azure.com/great-expectations/great_expectations/_build)
#
# The pipeline is run under the following conditions:
#   - On the develop branch whenever a commit is made to an open PR
#
# `dependency_graph` runs a subset of test suite, aiming to only test what's relevant to attain coverage over a given set of changes.
# The pipeline aims to balance both performance and safety to improve the developer experience but is innately less thorough than `great_expectations`.
#
# Note that `dependency_graph` makes heavy use of dgtest (https://github.com/superconductive/dgtest)

trigger:
  branches:
    include:
    - pre_pr-* # Can be used to test both `great_expectations` and `dependency_graph` pipelines
    - develop
    exclude:
    - main

resources:
  containers:
  - container: postgres
    image: postgres:11
    ports:
    - 5432:5432
    env:
      POSTGRES_DB: "test_ci"
      POSTGRES_HOST_AUTH_METHOD: "trust"
  - container: mysql
    image: mysql:8.0.20
    ports:
      - 3306:3306
    env:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: test_ci
  - container: mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    env:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ReallyStrongPwd1234%^&*
      MSSQL_DB: test_ci
      MSSQL_PID: Developer
    ports:
      - 1433:1433
  - container: trino
    image: trinodb/trino:379
    ports:
      - 8088:8080

variables:
  GE_USAGE_STATISTICS_URL: "https://qa.stats.greatexpectations.io/great_expectations/v1/usage_statistics"

stages:
  - stage: required
    pool:
      vmImage: 'ubuntu-18.04'

    jobs:
      - job: comprehensive
        timeoutInMinutes: 120

        services:
          postgres: postgres

        variables:
          GE_pytest_opts: '--postgresql --spark'

        strategy:
          matrix:
            Python37:
              python.version: '3.7'
              pandas.version: 'latest'
              GE_pytest_pip_opts: '--requirement requirements-dev.txt --constraint constraints-dev.txt'
            Python38:
              python.version: '3.8'
              pandas.version: 'latest'
              GE_pytest_pip_opts: '--requirement requirements-dev.txt --constraint constraints-dev.txt'
            Python39:
              python.version: '3.9'
              pandas.version: 'latest'
              GE_pytest_pip_opts: '--requirement requirements-dev.txt --constraint constraints-dev.txt'


        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'

          - bash: python -m pip install --upgrade pip==21.3.1
            displayName: 'Update pip'

          - script: |
              if [[ $(pandas.version) == 'latest' ]]; then
                pip install pandas
              else
                pip install pandas==$(pandas.version)
              fi
            displayName: 'Install pandas'

          - script: |
              pip install --requirement requirements.txt
              echo "about to run pip install $(GE_pytest_pip_opts)"
              pip install $(GE_pytest_pip_opts)
              pip install  .
            displayName: 'Install dependencies'

          - script: |
              # Install dependencies
              pip install pytest pytest-cov pytest-azurepipelines

              # Run pytest
              pytest --postgresql --spark tests/datasource/test_sparkdf_datasource.py::test_spark_kwargs_are_passed_through -vvs

            displayName: 'pytest'
