{
    "title": "ParquetAsset",
    "description": "Load a parquet object from the file path, returning a DataFrame.\n\nParameters\n----------\npath : str, path object or file-like object\n    Any valid string path is acceptable. The string could be a URL. Valid\n    URL schemes include http, ftp, s3, gs, and file. For file URLs, a host is\n    expected. A local file could be:\n    ``file://localhost/path/to/table.parquet``.\n    A file URL can also be a path to a directory that contains multiple\n    partitioned parquet files. Both pyarrow and fastparquet support\n    paths to directories as well as file URLs. A directory path could be:\n    ``file://localhost/path/to/tables`` or ``s3://bucket/partition_dir``\n\n    If you want to pass in a path object, pandas accepts any\n    ``os.PathLike``.\n\n    By file-like object, we refer to objects with a ``read()`` method,\n    such as a file handle (e.g. via builtin ``open`` function)\n    or ``StringIO``.\nengine : {'auto', 'pyarrow', 'fastparquet'}, default 'auto'\n    Parquet library to use. If 'auto', then the option\n    ``io.parquet.engine`` is used. The default ``io.parquet.engine``\n    behavior is to try 'pyarrow', falling back to 'fastparquet' if\n    'pyarrow' is unavailable.\ncolumns : list, default=None\n    If not None, only these columns will be read from the file.\n\nstorage_options : dict, optional\n    Extra options that make sense for a particular storage connection, e.g.\n    host, port, username, password, etc. For HTTP(S) URLs the key-value pairs\n    are forwarded to ``urllib`` as header options. For other URLs (e.g.\n    starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to\n    ``fsspec``. Please see ``fsspec`` and ``urllib`` for more details.\n\n    .. versionadded:: 1.3.0\n\nuse_nullable_dtypes : bool, default False\n    If True, use dtypes that use ``pd.NA`` as missing value indicator\n    for the resulting DataFrame. (only applicable for the ``pyarrow``\n    engine)\n    As new dtypes are added that support ``pd.NA`` in the future, the\n    output with this option will change to use those dtypes.\n    Note: this is an experimental option, and behaviour (e.g. additional\n    support dtypes) may change without notice.\n\n    .. versionadded:: 1.2.0\n\n**kwargs\n    Any additional kwargs are passed to the engine.\n\nReturns\n-------\nDataFrame",
    "type": "object",
    "properties": {
        "name": {
            "title": "Name",
            "type": "string"
        },
        "type": {
            "title": "Type",
            "default": "parquet",
            "enum": [
                "parquet"
            ],
            "type": "string"
        },
        "order_by": {
            "title": "Order By",
            "type": "array",
            "items": {
                "$ref": "#/definitions/BatchSorter"
            }
        },
        "base_directory": {
            "title": "Base Directory",
            "type": "string",
            "format": "path"
        },
        "regex": {
            "title": "Regex",
            "type": "string",
            "format": "regex"
        },
        "path": {
            "title": "Path"
        },
        "engine": {
            "title": "Engine",
            "default": "auto",
            "type": "string"
        },
        "columns": {
            "title": "Columns"
        },
        "storage_options": {
            "title": "Storage Options",
            "type": "object"
        },
        "use_nullable_dtypes": {
            "title": "Use Nullable Dtypes",
            "default": false,
            "type": "boolean"
        },
        "kwargs": {
            "title": "Kwargs"
        }
    },
    "required": [
        "name",
        "base_directory",
        "regex",
        "path",
        "kwargs"
    ],
    "additionalProperties": false,
    "definitions": {
        "BatchSorter": {
            "title": "BatchSorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        }
    }
}
