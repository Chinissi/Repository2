{
    "title": "PandasFwfAsset",
    "description": "Read a table of fixed-width formatted lines into DataFrame.\n\nAlso supports optionally iterating or breaking of the file\ninto chunks.\n\nAdditional help can be found in the `online docs for IO Tools\n<https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html>`_.\n\nParameters\n----------\nfilepath_or_buffer : str, path object or file-like object\n    Any valid string path is acceptable. The string could be a URL. Valid\n    URL schemes include http, ftp, s3, and file. For file URLs, a host is\n    expected. A local file could be:\n    ``file://localhost/path/to/table.csv``.\n\n    If you want to pass in a path object, pandas accepts any\n    ``os.PathLike``.\n\n    By file-like object, we refer to objects with a ``read()`` method,\n    such as a file handle (e.g. via builtin ``open`` function)\n    or ``StringIO``.\ncolspecs : list of tuple (int, int) or 'infer'. optional\n    A list of tuples giving the extents of the fixed-width\n    fields of each line as half-open intervals (i.e.,  [from, to[ ).\n    String value 'infer' can be used to instruct the parser to try\n    detecting the column specifications from the first 100 rows of\n    the data which are not being skipped via skiprows (default='infer').\nwidths : list of int, optional\n    A list of field widths which can be used instead of 'colspecs' if\n    the intervals are contiguous.\ninfer_nrows : int, default 100\n    The number of rows to consider when letting the parser determine the\n    `colspecs`.\n**kwds : optional\n    Optional keyword arguments can be passed to ``TextFileReader``.\n\nReturns\n-------\nDataFrame or TextParser\n    A comma-separated values (csv) file is returned as two-dimensional\n    data structure with labeled axes.\n\nSee Also\n--------\nDataFrame.to_csv : Write DataFrame to a comma-separated values (csv) file.\nread_csv : Read a comma-separated values (csv) file into DataFrame.\n\nExamples\n--------\n>>> pd.read_fwf('data.csv')  # doctest: +SKIP",
    "type": "object",
    "properties": {
        "name": {
            "title": "Name",
            "type": "string"
        },
        "type": {
            "title": "Type",
            "default": "pandas_fwf",
            "enum": [
                "pandas_fwf"
            ],
            "type": "string"
        },
        "order_by": {
            "title": "Order By",
            "type": "array",
            "items": {
                "$ref": "#/definitions/BatchSorter"
            }
        },
        "colspecs": {
            "title": "Colspecs",
            "default": "infer"
        },
        "widths": {
            "title": "Widths"
        },
        "infer_nrows": {
            "title": "Infer Nrows",
            "default": 100
        },
        "kwds": {
            "title": "Kwds"
        }
    },
    "required": [
        "name",
        "kwds"
    ],
    "additionalProperties": false,
    "definitions": {
        "BatchSorter": {
            "title": "BatchSorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        }
    }
}
