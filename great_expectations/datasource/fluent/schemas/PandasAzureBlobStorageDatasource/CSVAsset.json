{
    "title": "CSVAsset",
    "description": "Read a comma-separated values (csv) file into DataFrame.\n\nAlso supports optionally iterating or breaking of the file\ninto chunks.\n\nAdditional help can be found in the online docs for\n`IO Tools <https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html>`_.",
    "type": "object",
    "properties": {
        "name": {
            "title": "Name",
            "type": "string"
        },
        "type": {
            "title": "Type",
            "default": "csv",
            "enum": [
                "csv"
            ],
            "type": "string"
        },
        "id": {
            "title": "Id",
            "description": "DataAsset id",
            "type": "string",
            "format": "uuid"
        },
        "order_by": {
            "title": "Order By",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Sorter"
            }
        },
        "batch_metadata": {
            "title": "Batch Metadata",
            "type": "object"
        },
        "batch_configs": {
            "title": "Batch Configs",
            "type": "array",
            "items": {
                "$ref": "#/definitions/BatchConfig"
            }
        },
        "batching_regex": {
            "title": "Batching Regex",
            "default": ".*",
            "type": "string",
            "format": "regex"
        },
        "connect_options": {
            "title": "Connect Options",
            "description": "Optional filesystem specific advanced parameters for connecting to data assets",
            "type": "object"
        },
        "partitioner": {
            "title": "Partitioner",
            "anyOf": [
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart"
                }
            ]
        },
        "sep": {
            "title": "Sep",
            "type": "string"
        },
        "delimiter": {
            "title": "Delimiter",
            "type": "string"
        },
        "header": {
            "title": "Header",
            "default": "infer",
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                {
                    "enum": [
                        "infer"
                    ],
                    "type": "string"
                }
            ]
        },
        "names": {
            "title": "Names",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "index_col": {
            "title": "Index Col",
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                }
            ]
        },
        "usecols": {
            "title": "Usecols",
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            ]
        },
        "squeeze": {
            "title": "Squeeze",
            "type": "boolean"
        },
        "prefix": {
            "title": "Prefix",
            "type": "string"
        },
        "mangle_dupe_cols": {
            "title": "Mangle Dupe Cols",
            "default": true,
            "type": "boolean"
        },
        "dtype": {
            "title": "Dtype",
            "type": "object"
        },
        "engine": {
            "title": "Engine",
            "enum": [
                "c",
                "python",
                "pyarrow",
                "python-fwf"
            ],
            "type": "string"
        },
        "converters": {
            "title": "Converters"
        },
        "true_values": {
            "title": "True Values"
        },
        "false_values": {
            "title": "False Values"
        },
        "skipinitialspace": {
            "title": "Skipinitialspace",
            "default": false,
            "type": "boolean"
        },
        "skiprows": {
            "title": "Skiprows",
            "anyOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                {
                    "type": "integer"
                }
            ]
        },
        "skipfooter": {
            "title": "Skipfooter",
            "default": 0,
            "type": "integer"
        },
        "nrows": {
            "title": "Nrows",
            "type": "integer"
        },
        "na_values": {
            "title": "Na Values"
        },
        "keep_default_na": {
            "title": "Keep Default Na",
            "default": true,
            "type": "boolean"
        },
        "na_filter": {
            "title": "Na Filter",
            "default": true,
            "type": "boolean"
        },
        "verbose": {
            "title": "Verbose",
            "default": false,
            "type": "boolean"
        },
        "skip_blank_lines": {
            "title": "Skip Blank Lines",
            "default": true,
            "type": "boolean"
        },
        "parse_dates": {
            "title": "Parse Dates"
        },
        "infer_datetime_format": {
            "title": "Infer Datetime Format",
            "default": false,
            "type": "boolean"
        },
        "keep_date_col": {
            "title": "Keep Date Col",
            "default": false,
            "type": "boolean"
        },
        "date_parser": {
            "title": "Date Parser"
        },
        "dayfirst": {
            "title": "Dayfirst",
            "default": false,
            "type": "boolean"
        },
        "cache_dates": {
            "title": "Cache Dates",
            "default": true,
            "type": "boolean"
        },
        "iterator": {
            "title": "Iterator",
            "default": false,
            "type": "boolean"
        },
        "chunksize": {
            "title": "Chunksize",
            "type": "integer"
        },
        "compression": {
            "title": "Compression",
            "default": "infer",
            "anyOf": [
                {
                    "enum": [
                        "infer",
                        "gzip",
                        "bz2",
                        "zip",
                        "xz",
                        "zstd",
                        "tar"
                    ],
                    "type": "string"
                },
                {
                    "type": "object"
                }
            ]
        },
        "thousands": {
            "title": "Thousands",
            "type": "string"
        },
        "decimal": {
            "title": "Decimal",
            "default": ".",
            "type": "string"
        },
        "lineterminator": {
            "title": "Lineterminator",
            "type": "string"
        },
        "quotechar": {
            "title": "Quotechar",
            "default": "\"",
            "type": "string"
        },
        "quoting": {
            "title": "Quoting",
            "default": 0,
            "type": "integer"
        },
        "doublequote": {
            "title": "Doublequote",
            "default": true,
            "type": "boolean"
        },
        "escapechar": {
            "title": "Escapechar",
            "type": "string"
        },
        "comment": {
            "title": "Comment",
            "type": "string"
        },
        "encoding": {
            "title": "Encoding",
            "type": "string"
        },
        "encoding_errors": {
            "title": "Encoding Errors",
            "default": "strict",
            "type": "string"
        },
        "dialect": {
            "title": "Dialect",
            "type": "string"
        },
        "error_bad_lines": {
            "title": "Error Bad Lines",
            "type": "boolean"
        },
        "warn_bad_lines": {
            "title": "Warn Bad Lines",
            "type": "boolean"
        },
        "on_bad_lines": {
            "title": "On Bad Lines"
        },
        "delim_whitespace": {
            "title": "Delim Whitespace",
            "default": false,
            "type": "boolean"
        },
        "low_memory": {
            "title": "Low Memory",
            "default": true
        },
        "memory_map": {
            "title": "Memory Map",
            "default": false,
            "type": "boolean"
        },
        "float_precision": {
            "title": "Float Precision",
            "enum": [
                "high",
                "legacy"
            ],
            "type": "string"
        },
        "storage_options": {
            "title": "Storage Options",
            "type": "object"
        }
    },
    "required": [
        "name"
    ],
    "additionalProperties": false,
    "definitions": {
        "Sorter": {
            "title": "Sorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYear": {
            "title": "PartitionerYear",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonth": {
            "title": "PartitionerYearAndMonth",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonthAndDay": {
            "title": "PartitionerYearAndMonthAndDay",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerDatetimePart": {
            "title": "PartitionerDatetimePart",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_date_parts",
                    "enum": [
                        "partition_on_date_parts"
                    ],
                    "type": "string"
                },
                "datetime_parts": {
                    "title": "Datetime Parts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "column_name",
                "datetime_parts"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerDividedInteger": {
            "title": "PartitionerDividedInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_divided_integer",
                    "enum": [
                        "partition_on_divided_integer"
                    ],
                    "type": "string"
                },
                "divisor": {
                    "title": "Divisor",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "divisor"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerModInteger": {
            "title": "PartitionerModInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_mod_integer",
                    "enum": [
                        "partition_on_mod_integer"
                    ],
                    "type": "string"
                },
                "mod": {
                    "title": "Mod",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "mod"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerColumnValue": {
            "title": "PartitionerColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_column_value",
                    "enum": [
                        "partition_on_column_value"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerMultiColumnValue": {
            "title": "PartitionerMultiColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_names": {
                    "title": "Column Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_multi_column_values",
                    "enum": [
                        "partition_on_multi_column_values"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_names"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear": {
            "title": "PartitionerYear",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth": {
            "title": "PartitionerYearAndMonth",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay": {
            "title": "PartitionerYearAndMonthAndDay",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart": {
            "title": "PartitionerDatetimePart",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_date_parts",
                    "enum": [
                        "partition_on_date_parts"
                    ],
                    "type": "string"
                },
                "datetime_parts": {
                    "title": "Datetime Parts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "column_name",
                "datetime_parts"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger": {
            "title": "PartitionerDividedInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_divided_integer",
                    "enum": [
                        "partition_on_divided_integer"
                    ],
                    "type": "string"
                },
                "divisor": {
                    "title": "Divisor",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "divisor"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger": {
            "title": "PartitionerModInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_mod_integer",
                    "enum": [
                        "partition_on_mod_integer"
                    ],
                    "type": "string"
                },
                "mod": {
                    "title": "Mod",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "mod"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue": {
            "title": "PartitionerColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_column_value",
                    "enum": [
                        "partition_on_column_value"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue": {
            "title": "PartitionerMultiColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_names": {
                    "title": "Column Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_multi_column_values",
                    "enum": [
                        "partition_on_multi_column_values"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_names"
            ],
            "additionalProperties": false
        },
        "BatchConfig": {
            "title": "BatchConfig",
            "description": "Configuration for a batch of data.\n\nReferences the DataAsset to be used, and any additional parameters needed to fetch the data.",
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "partitioner": {
                    "title": "Partitioner",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYear"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonth"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonthAndDay"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerDatetimePart"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerDividedInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerModInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerMultiColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue"
                        }
                    ]
                }
            },
            "required": [
                "name"
            ]
        }
    }
}
