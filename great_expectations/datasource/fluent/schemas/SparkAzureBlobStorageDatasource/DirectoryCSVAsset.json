{
    "title": "DirectoryCSVAsset",
    "description": "Used for accessing all the files in a directory as a single batch.",
    "type": "object",
    "properties": {
        "name": {
            "title": "Name",
            "type": "string"
        },
        "type": {
            "title": "Type",
            "default": "directory_csv",
            "enum": [
                "directory_csv"
            ],
            "type": "string"
        },
        "id": {
            "title": "Id",
            "description": "DataAsset id",
            "type": "string",
            "format": "uuid"
        },
        "order_by": {
            "title": "Order By",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Sorter"
            }
        },
        "batch_metadata": {
            "title": "Batch Metadata",
            "type": "object"
        },
        "batch_configs": {
            "title": "Batch Configs",
            "type": "array",
            "items": {
                "$ref": "#/definitions/BatchConfig"
            }
        },
        "batching_regex": {
            "title": "Batching Regex",
            "default": ".*",
            "type": "string",
            "format": "regex"
        },
        "connect_options": {
            "title": "Connect Options",
            "description": "Optional filesystem specific advanced parameters for connecting to data assets",
            "type": "object"
        },
        "partitioner": {
            "title": "Partitioner",
            "anyOf": [
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay"
                },
                {
                    "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart"
                }
            ]
        },
        "pathGlobFilter": {
            "title": "Pathglobfilter",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "recursiveFileLookup": {
            "title": "Recursivefilelookup",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "modifiedBefore": {
            "title": "Modifiedbefore",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "modifiedAfter": {
            "title": "Modifiedafter",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "schema": {
            "title": "Schema",
            "anyOf": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "sep": {
            "title": "Sep",
            "type": "string"
        },
        "encoding": {
            "title": "Encoding",
            "type": "string"
        },
        "quote": {
            "title": "Quote",
            "type": "string"
        },
        "escape": {
            "title": "Escape",
            "type": "string"
        },
        "comment": {
            "title": "Comment",
            "type": "string"
        },
        "header": {
            "title": "Header",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "inferSchema": {
            "title": "Inferschema",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "ignoreLeadingWhiteSpace": {
            "title": "Ignoreleadingwhitespace",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "ignoreTrailingWhiteSpace": {
            "title": "Ignoretrailingwhitespace",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "nullValue": {
            "title": "Nullvalue",
            "type": "string"
        },
        "nanValue": {
            "title": "Nanvalue",
            "type": "string"
        },
        "positiveInf": {
            "title": "Positiveinf",
            "type": "string"
        },
        "negativeInf": {
            "title": "Negativeinf",
            "type": "string"
        },
        "dateFormat": {
            "title": "Dateformat",
            "type": "string"
        },
        "timestampFormat": {
            "title": "Timestampformat",
            "type": "string"
        },
        "maxColumns": {
            "title": "Maxcolumns",
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string"
                }
            ]
        },
        "maxCharsPerColumn": {
            "title": "Maxcharspercolumn",
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string"
                }
            ]
        },
        "maxMalformedLogPerPartition": {
            "title": "Maxmalformedlogperpartition",
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string"
                }
            ]
        },
        "mode": {
            "title": "Mode",
            "enum": [
                "PERMISSIVE",
                "DROPMALFORMED",
                "FAILFAST"
            ],
            "type": "string"
        },
        "columnNameOfCorruptRecord": {
            "title": "Columnnameofcorruptrecord",
            "type": "string"
        },
        "multiLine": {
            "title": "Multiline",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "charToEscapeQuoteEscaping": {
            "title": "Chartoescapequoteescaping",
            "type": "string"
        },
        "samplingRatio": {
            "title": "Samplingratio",
            "anyOf": [
                {
                    "type": "number"
                },
                {
                    "type": "string"
                }
            ]
        },
        "enforceSchema": {
            "title": "Enforceschema",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "emptyValue": {
            "title": "Emptyvalue",
            "type": "string"
        },
        "locale": {
            "title": "Locale",
            "type": "string"
        },
        "lineSep": {
            "title": "Linesep",
            "type": "string"
        },
        "unescapedQuoteHandling": {
            "title": "Unescapedquotehandling",
            "enum": [
                "STOP_AT_CLOSING_QUOTE",
                "BACK_TO_DELIMITER",
                "STOP_AT_DELIMITER",
                "SKIP_VALUE",
                "RAISE_ERROR"
            ],
            "type": "string"
        },
        "data_directory": {
            "title": "Data Directory",
            "type": "string",
            "format": "path"
        }
    },
    "required": [
        "name",
        "data_directory"
    ],
    "additionalProperties": false,
    "definitions": {
        "Sorter": {
            "title": "Sorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYear": {
            "title": "PartitionerYear",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonth": {
            "title": "PartitionerYearAndMonth",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonthAndDay": {
            "title": "PartitionerYearAndMonthAndDay",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerDatetimePart": {
            "title": "PartitionerDatetimePart",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_date_parts",
                    "enum": [
                        "partition_on_date_parts"
                    ],
                    "type": "string"
                },
                "datetime_parts": {
                    "title": "Datetime Parts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "column_name",
                "datetime_parts"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerDividedInteger": {
            "title": "PartitionerDividedInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_divided_integer",
                    "enum": [
                        "partition_on_divided_integer"
                    ],
                    "type": "string"
                },
                "divisor": {
                    "title": "Divisor",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "divisor"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerModInteger": {
            "title": "PartitionerModInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_mod_integer",
                    "enum": [
                        "partition_on_mod_integer"
                    ],
                    "type": "string"
                },
                "mod": {
                    "title": "Mod",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "mod"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerColumnValue": {
            "title": "PartitionerColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_column_value",
                    "enum": [
                        "partition_on_column_value"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__sql_datasource__PartitionerMultiColumnValue": {
            "title": "PartitionerMultiColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_names": {
                    "title": "Column Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_multi_column_values",
                    "enum": [
                        "partition_on_multi_column_values"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_names"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear": {
            "title": "PartitionerYear",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth": {
            "title": "PartitionerYearAndMonth",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay": {
            "title": "PartitionerYearAndMonthAndDay",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart": {
            "title": "PartitionerDatetimePart",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_date_parts",
                    "enum": [
                        "partition_on_date_parts"
                    ],
                    "type": "string"
                },
                "datetime_parts": {
                    "title": "Datetime Parts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "column_name",
                "datetime_parts"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger": {
            "title": "PartitionerDividedInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_divided_integer",
                    "enum": [
                        "partition_on_divided_integer"
                    ],
                    "type": "string"
                },
                "divisor": {
                    "title": "Divisor",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "divisor"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger": {
            "title": "PartitionerModInteger",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_mod_integer",
                    "enum": [
                        "partition_on_mod_integer"
                    ],
                    "type": "string"
                },
                "mod": {
                    "title": "Mod",
                    "type": "integer"
                }
            },
            "required": [
                "column_name",
                "mod"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue": {
            "title": "PartitionerColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_column_value",
                    "enum": [
                        "partition_on_column_value"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ],
            "additionalProperties": false
        },
        "great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue": {
            "title": "PartitionerMultiColumnValue",
            "description": "Base model for most fluent datasource related pydantic models.\n\nAdds yaml dumping and parsing methods.\n\nExtra fields are not allowed.\n\nSerialization methods default to `exclude_unset = True` to prevent serializing\nconfigs full of mostly unset default values.\nAlso prevents passing along unset kwargs to BatchSpec.\nhttps://docs.pydantic.dev/usage/exporting_models/",
            "type": "object",
            "properties": {
                "column_names": {
                    "title": "Column Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_multi_column_values",
                    "enum": [
                        "partition_on_multi_column_values"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_names"
            ],
            "additionalProperties": false
        },
        "BatchConfig": {
            "title": "BatchConfig",
            "description": "Configuration for a batch of data.\n\nReferences the DataAsset to be used, and any additional parameters needed to fetch the data.",
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "partitioner": {
                    "title": "Partitioner",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYear"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonth"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerYearAndMonthAndDay"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerDatetimePart"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerDividedInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerModInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__sql_datasource__PartitionerMultiColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYear"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonth"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerYearAndMonthAndDay"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDatetimePart"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerDividedInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerModInteger"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerColumnValue"
                        },
                        {
                            "$ref": "#/definitions/great_expectations__datasource__fluent__spark_generic_partitioners__PartitionerMultiColumnValue"
                        }
                    ]
                }
            },
            "required": [
                "name"
            ]
        }
    }
}
