# This file is responsible for configuring the `packaging` pipeline (https://dev.azure.com/great-expectations/great_expectations/_build)
#
# The pipeline is run under the following conditions:
#   - On the main branch when a weekly release is being cut
#   - On the develop branch as scheduled by the below cron job
#
#  `packaging` is meant to test the installation and packaging of Great Expectations in a variety of environments.

schedules:
- cron: 0 0 * * *
  displayName: Scheduled Runs
  branches:
    include:
    - develop
    exclude:
    - main
  always: true # As this is run once a day, we always want to run it (regardless of whether or not changes have occurred)

# trigger:
#   branches:
#     include:
#     - pre_pr-*
#     - main
#     exclude:
#     - develop

# The pipeline is run under two primary conditions: if merging into main or as scheduled by the above cron job.
# variables:
#   isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
#   isScheduled: $[and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.Reason'], 'Schedule'))]
#   GE_USAGE_STATISTICS_URL: "https://qa.stats.greatexpectations.io/great_expectations/v1/usage_statistics"

# windows / ubuntu/ macos
# 3.6 / 3.7 / 3.8 / 3.9
# conda / pip
# dev install
# dev-lite install

parameters:
  - name: 'linux-py3.6'
    vmImage: 'ubuntu-latest'
    pythonVersion: '3.6'
  - name: linux-py3.7
    vmImage: 'ubuntu-latest'
    pythonVersion: '3.7'
  - name: linux-py3.8
    vmImage: 'ubuntu-latest'
    pythonVersion: '3.8'
  - name: linux-py3.9
    vmImage: 'ubuntu-latest'
    pythonVersion: '3.9'
  - name: linux-py3.10
    vmImage: 'ubuntu-latest'
    pythonVersion: '3.10'
  - name: macOS-py3.7
    vmImage: 'macOS-latest'
    pythonVersion: '3.7'
  - name: macOS-py3.8
    vmImage: 'macOS-latest'
    pythonVersion: '3.8'
  - name: macOS-py3.9
    vmImage: 'macOS-latest'
    pythonVersion: '3.9'
  - name: macOS-py3.10
    vmImage: 'macOS-latest'
    pythonVersion: '3.10'
  - name: windows-py3.7
    vmImage: 'windows-latest'
    pythonVersion: '3.7'
  - name: windows-py3.8
    vmImage: 'windows-latest'
    pythonVersion: '3.8'
  - name: windows-py3.9
    vmImage: 'windows-latest'
    pythonVersion: '3.9'
  - name: windows-py3.10
    vmImage: 'windows-latest'
    pythonVersion: '3.10'

stages:
  - stage: lint
    pool:
      vmImage: '$(vmImage)'
    jobs:
      - job: pip
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'

          - script: |
              python -m pip install --upgrade pip==21.3.1
              pip install great_expectations
            displayName: 'Install'

          - bash: great_expectations --version
            displayName: 'Confirm installation'

      # - job: conda_install
      #   strategy:
      #     matrix:
      #       py3.6:
      #         pythonVersion: '3.6'
      #       py3.7:
      #         pythonVersion: '3.7'
      #       py3.8:
      #         pythonVersion: '3.8'
      #       py3.9:
      #         pythonVersion: '3.9'
      #       py3.10:
      #         pythonVersion: '3.10'

      #   steps:
      #     - task: UsePythonVersion@0
      #       inputs:
      #         versionSpec: '$(pythonVersion)'
      #       displayName: 'Use Python $(pythonVersion)'

      #     - script: |
      #         echo "Hello, conda!"
      #       displayName: 'Install'

      #     - bash: great_expectations --version
      #       displayName: 'Confirm installation'

      # - job: dev_env_full
      #   strategy:
      #     matrix:
      #       py3.6:
      #         pythonVersion: '3.6'
      #       py3.7:
      #         pythonVersion: '3.7'
      #       py3.8:
      #         pythonVersion: '3.8'
      #       py3.9:
      #         pythonVersion: '3.9'
      #       py3.10:
      #         pythonVersion: '3.10'

      #   steps:
      #     - task: UsePythonVersion@0
      #       inputs:
      #         versionSpec: '$(pythonVersion)'
      #       displayName: 'Use Python $(pythonVersion)'

      # - job: dev_env_lightweight
      #   strategy:
      #     matrix:
      #       py3.6:
      #         pythonVersion: '3.6'
      #       py3.7:
      #         pythonVersion: '3.7'
      #       py3.8:
      #         pythonVersion: '3.8'
      #       py3.9:
      #         pythonVersion: '3.9'
      #       py3.10:
      #         pythonVersion: '3.10'

      #   steps:
      #     - task: UsePythonVersion@0
      #       inputs:
      #         versionSpec: '$(pythonVersion)'
      #       displayName: 'Use Python $(pythonVersion)'
