# This file is responsible for configuring the `packaging` pipeline (https://dev.azure.com/great-expectations/great_expectations/_build)
#
# The pipeline is run under the following conditions:
#   - On the main branch when a weekly release is being cut
#   - On the develop branch as scheduled by the below cron job
#
#  `packaging` is meant to test the installation and packaging of Great Expectations in a variety of environments.

schedules:
- cron: 0 0 * * *
  displayName: Scheduled Runs
  branches:
    include:
    - develop
    exclude:
    - main
  always: true # As this is run once a day, we always want to run it (regardless of whether or not changes have occurred)

# trigger:
#   branches:
#     include:
#     - pre_pr-*
#     - main
#     exclude:
#     - develop

# The pipeline is run under two primary conditions: if merging into main or as scheduled by the above cron job.
# variables:
#   isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
#   isScheduled: $[and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.Reason'], 'Schedule'))]
#   GE_USAGE_STATISTICS_URL: "https://qa.stats.greatexpectations.io/great_expectations/v1/usage_statistics"

# windows / ubuntu/ macos
# 3.6 / 3.7 / 3.8 / 3.9
# conda / pip
# dev install
# dev-lite install

strategy:
  matrix:
    linux-py3.6-pip:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.6'
      runner: 'pip'
    linux-py3.7-pip:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.7'
      runner: 'pip'
    linux-py3.8-pip:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.8'
      runner: 'pip'
    linux-py3.9-pip:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.9'
      runner: 'pip'
    linux-py3.10-pip:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.10'
      runner: 'pip'
    mac-py3.7-pip:
      imageName: 'macOS-latest'
      pythonVersion: '3.7'
      runner: 'pip'
    mac-py3.8-pip:
      imageName: 'macOS-latest'
      pythonVersion: '3.8'
      runner: 'pip'
    mac-py3.9-pip:
      imageName: 'macOS-latest'
      pythonVersion: '3.9'
      runner: 'pip'
    mac-py3.10-pip:
      imageName: 'macOS-latest'
      pythonVersion: '3.10'
      runner: 'pip'
    windows-py3.7-pip:
      imageName: 'windows-latest'
      pythonVersion: '3.7'
      runner: 'pip'
    windows-py3.8-pip:
      imageName: 'windows-latest'
      pythonVersion: '3.8'
      runner: 'pip'
    windows-py3.9-pip:
      imageName: 'windows-latest'
      pythonVersion: '3.9'
      runner: 'pip'
    windows-py3.10-pip:
      imageName: 'windows-latest'
      pythonVersion: '3.10'
      runner: 'pip'
    linux-py3.6-conda:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.6'
      runner: 'conda'
    linux-py3.7-conda:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.7'
      runner: 'conda'
    linux-py3.8-conda:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.8'
      runner: 'conda'
    linux-py3.9-conda:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.9'
      runner: 'conda'
    linux-py3.10-conda:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.9'
      runner: 'conda'
    mac-py3.7-conda:
      imageName: 'macOS-latest'
      pythonVersion: '3.7'
      runner: 'conda'
    mac-py3.8-conda:
      imageName: 'macOS-latest'
      pythonVersion: '3.8'
      runner: 'conda'
    mac-py3.9-conda:
      imageName: 'macOS-latest'
      pythonVersion: '3.9'
      runner: 'conda'
    mac-py3.10-conda:
      imageName: 'macOS-latest'
      pythonVersion: '3.10'
      runner: 'conda'
    windows-py3.7-conda:
      imageName: 'windows-latest'
      pythonVersion: '3.7'
      runner: 'conda'
    windows-py3.8-conda:
      imageName: 'windows-latest'
      pythonVersion: '3.8'
      runner: 'conda'
    windows-py3.9-conda:
      imageName: 'windows-latest'
      pythonVersion: '3.9'
      runner: 'conda'
    windows-py3.10-conda:
      imageName: 'windows-latest'
      pythonVersion: '3.10'
      runner: 'conda'

pool:
  vmImage: $(imageName)

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
    displayName: 'Use Python $(pythonVersion)'

  - script: |
      python -m pip install --upgrade pip==21.3.1
      pip install great_expectations
    condition: eq(variables['runner'], 'pip')
    displayName: 'pip'

  - script: |
      echo 'Hello conda'
    condition: eq(variables['runner'], 'conda')
    displayName: 'conda'

  - bash: great_expectations --version
    displayName: 'Confirm installation'
