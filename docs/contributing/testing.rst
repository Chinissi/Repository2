.. _contributing_testing:


Testing
==============


Unit tests
------------------------

You can run all tests by running ``pytest`` in the ``great_expectations`` directory root.

#FIXME: Insert animated gif of normal behavior.

If you did not configure optional backends for testing, tests against these backends will fail.

#FIXME: Insert animated gif of breaking tests.

You can suppress these tests by adding the following flags:

- ``--no-postgresql`` will skip postgres tests
- ``--no-spark`` will skip spark tests 
- ``--no-sqlalchemy`` will skip all tests using sqlalchemy (i.e. all database backends)

For example, you can run ``pytest --no-spark --no-sqlalchemy`` to skip all local backend tests (with the exception of the pandas backend). Please note that these tests will still be run by the CI as soon as you open a PR, so some tests might fail if your code changes affected them.

#FIXME: Insert animated gif with backend tests suppressed.

Note: as of early 2020, the tests generate many warnings. Most of these are generated by dependencies (pandas, sqlalchemy, etc.) You can suppress them with pytest's ``--disable-pytest-warnings`` flag: ``pytest --no-spark --no-sqlalchemy --disable-pytest-warnings``

#FIXME: Insert animated gif with warnings suppressed.


Expectation tests
---------------------------


Integration tests
-------------------------------------------


Manual testing
---------------------------------------------


