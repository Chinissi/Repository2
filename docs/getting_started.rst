.. _getting_started:


###############
Getting started
###############

Welcome to Great Expectations! This tutorial will help you set up your first deployment of Great Expectactions. We'll also introduce important concepts, with links to detailed material you can dig into later.

Please follow these steps to get started:

.. raw:: html

   <embed>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css">
      <style>
         .custom-indented-paragraph {
            margin-left: 70px;
         }
      </style>
   </embed>

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            1
         </strong>
      </span> Initialize a DataContext</h2>
   </embed>

.. container:: custom-indented-paragraph

   In Great Expectations, your ``DataContext`` manages boilerplate configuration. Using a DataContext is almost always the fastest way to get up and running, even though some teams don't need every component of a DataContext.
   
   Follow these instructions to :ref:`getting_started__initialize_a_data_context`.

   Alternatively, if you really want to learn the components of Great Expectations without a DataContext, check out `A magic-free introduction to Great Expectations.`_

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            2
         </strong>
      </span> Connect to data</h2>
   </embed>

.. container:: custom-indented-paragraph

   Once you have a DataContext, you'll want to connect to data. Your data could live in files on disk, in a database, in a cloud store, etc. You might also manage connections to data through another orchestration tool.
   
   Great Expectations' ``DataSource`` and ``Generator`` classes handle all of these cases. They manage configuration and provide a consistent, cross-platform API for referencing data. Together, DataSources and Generators will allow you to reference meaningful batches of data for validation (and other use cases.)
   
   Check out :ref:`getting_started__connect_to_data` to learn how to configure DataSources and Generators.

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            3
         </strong>
      </span> Set up data documentation</h2>
   </embed>

.. container:: custom-indented-paragraph

   One of Great Expectations' core promises is that your tests and documentation will always stay in sync, because docs and tests are both `compiled from the same Expectations`_.
   
   To see how this works, follow the instructions ``here`` to set up a local static website for your data documentation. Later, you'll be able to `host the site remotely`_, or integrate content generated by Great Expectations into an external metadata store like `Google Data Catalog`_, `Amundsen`_, or `dbt docs`_.

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            4
         </strong>
      </span> Create your first Expectations</h2>
   </embed>

.. container:: custom-indented-paragraph

   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas varius purus odio, nec condimentum nisi viverra et. Ut eu ornare ex, sed finibus dolor. Suspendisse potenti. Nulla vel massa ornare, ultrices odio nec, porttitor sapien. Curabitur vehicula placerat porttitor. #FIXME
   
   Sed a sem tortor. Curabitur lobortis, massa vitae dignissim posuere, leo dolor hendrerit est, non sollicitudin eros metus quis velit. Curabitur ut enim vitae velit euismod ullamcorper. Duis vehicula vel metus at aliquet. Pellentesque lacinia mi id mollis pharetra. Donec at maximus erat. Praesent ut odio ante. #FIXME

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            5
         </strong>
      </span> Validate some data</h2>
   </embed>

.. container:: custom-indented-paragraph

   Maecenas varius purus odio, nec condimentum nisi viverra et. Ut eu ornare ex, sed finibus dolor. Suspendisse potenti. Nulla vel massa ornare, ultrices odio nec, porttitor sapien. #FIXME
   
   Curabitur vehicula placerat porttitor. Sed a sem tortor. Curabitur lobortis, massa vitae dignissim posuere, leo dolor hendrerit est, non sollicitudin eros metus quis velit. Curabitur ut enim vitae velit euismod ullamcorper. Duis vehicula vel metus at aliquet. Pellentesque lacinia mi id mollis pharetra. Donec at maximus erat. Praesent ut odio ante. #FIXME

.. raw:: html

   <embed>
      <h2><span class="fa-stack">
         <span class="fa fa-circle-o fa-stack-2x"></span>
         <strong class="fa-stack-1x">
            6
         </strong>
      </span> Pick your deployment pattern</h2>
   </embed>

.. container:: custom-indented-paragraph

   By this point, you'll have your first, working deployment of Great Expectations. It will be pretty basic: most of the storage and execution will be handled locally.
   
   The next step is to `pick your deployment pattern`_. DataContexts make this modular, so that you can add or swap out one component at a time. Most of these changes are quick, incremental steps---so you can upgrade from a basic demo deployment to a full production deployment at your own pace and be confident that your DataContext will continue to work at every step along the way.
   
-----

Table of contents for Getting Started:

.. toctree::
   :maxdepth: 1

   /getting_started/initialize_a_data_context
   /getting_started/connect_to_data
   /getting_started/set_up_data_docs
   /getting_started/create_expectation_suites
   /getting_started/validate_data
   /getting_started/pick_your_deployment_pattern
