# This file is responsible for configuring the `dev` pipeline (https://dev.azure.com/great-expectations/great_expectations/_build)
#
# The pipeline is run under the following conditions:
#   - On the develop branch whenever a commit is made to an open PR
#
# `dev` runs unit tests for any directories that have sufficient coverage and integration tests for those that don't.
# The pipeline aims to balance both performance and safety to improve the developer experience but is innately less thorough than `great_expectations`.

trigger:
  branches:
    include:
    - pre_pr-* # Can be used to test both `great_expectations` and `dependency_graph` pipelines
    - develop
    exclude:
    - main

resources:
  containers:
  - container: postgres
    image: postgres:11
    ports:
    - 5432:5432
    env:
      POSTGRES_DB: "test_ci"
      POSTGRES_HOST_AUTH_METHOD: "trust"
  - container: mysql
    image: mysql:8.0.20
    ports:
      - 3306:3306
    env:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: test_ci
  - container: mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    env:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ReallyStrongPwd1234%^&*
      MSSQL_DB: test_ci
      MSSQL_PID: Developer
    ports:
      - 1433:1433
  - container: trino
    image: trinodb/trino:379
    ports:
      - 8088:8080

variables:
  GE_USAGE_STATISTICS_URL: "https://qa.stats.greatexpectations.io/great_expectations/v1/usage_statistics"


stages:
  - stage: db_integration
    pool:
      vmImage: 'ubuntu-latest'

    jobs:
      - job: trino
        timeoutInMinutes: 120

        services:
          trino: trino

        variables:
          python.version: '3.8'

        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'

          - bash: python -m pip install --upgrade pip==21.3.1
            displayName: 'Update pip'

          - script: |
              printf 'Waiting for Trino database to accept connections'
              sleep 30
#             until trino --execute "SHOW CATALOGS"; do
#               printf '.'
#               sleep 1;
#             done;
            displayName: Wait for database to initialise

          - script: |
              pip install --requirement requirements-dev-test.txt --requirement requirements-dev-sqlalchemy.txt --constraint constraints-dev.txt
              pip install --requirement requirements.txt
              pip install .
            displayName: 'Install dependencies'

          - script: |
              # Install dependencies
              pip install pytest-cov pytest-azurepipelines

              # Run pytest on Trino-specific tests
              pytest tests --trino --mark trino

              # Run all Expectation tests that may contain Trino
              pytest tests/test_dataset_implementations tests/test_definitions

            displayName: 'pytest'
            env:
              GE_USAGE_STATISTICS_URL: ${{ variables.GE_USAGE_STATISTICS_URL }}
