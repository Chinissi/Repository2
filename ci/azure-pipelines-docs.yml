# This file configures the `docs` pipeline (https://dev.azure.com/great-expectations/great_expectations/_build)
#
# This pipeline configures tests that ensure our docs are built successfully.
#
# The pipeline is run under the following conditions:
#   - On any PR

trigger:
  branches:
    include:
    - develop

variables:
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  isManual: $[eq(variables['Build.Reason'], 'Manual')]
  GE_USAGE_STATISTICS_URL: "https://qa.stats.greatexpectations.io/great_expectations/v1/usage_statistics"

stages:
  - stage: scope_check
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: changes
        steps:
          - checkout: self
            fetchDepth: "0"
          - task: ChangedFiles@1
            name: CheckDocsChanges
            inputs:
              verbose: true
              rules: |
                [DocsChanged]
                docs/**
                tests/integration/docusaurus/**
                tests/integration/fixtures/**
                tests/test_sets/**

  - stage: custom_checks
    dependsOn: scope_check
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
    - job: docs_snippet_checker
      condition: or(eq(stageDependencies.scope_check.changes.outputs['CheckDocsChanges.DocsChanged'], true), eq(variables.isDevelop, true), eq(variables.isManual, true))
      steps:
        - script: |
            yarn install
          name: YarnInstall
        - task: PythonScript@0
          inputs:
            scriptSource: 'filePath'
            scriptPath: 'ci/checks/validate_docs_snippets.py'
            failOnStderr: false
          name: DocsSnippetChecker

    - job: integration_test_gets_run_checker
      condition: or(eq(stageDependencies.scope_check.changes.outputs['CheckDocsChanges.DocsChanged'], true), eq(variables.isDevelop, true), eq(variables.isManual, true))
      steps:
        - task: PythonScript@0
          inputs:
            scriptSource: 'filePath'
            scriptPath: 'ci/checks/check_integration_test_gets_run.py'
            failOnStderr: true
          name: IntegrationTestGetsRunChecker

    - job: name_tag_snippet_referenced_checker
      condition: or(eq(stageDependencies.scope_check.changes.outputs['CheckDocsChanges.DocsChanged'], true), eq(variables.isDevelop, true), eq(variables.isManual, true))
      steps:
        - task: PythonScript@0
          inputs:
            scriptSource: 'filePath'
            scriptPath: 'ci/checks/check_name_tag_snippets_referenced.py'
            failOnStderr: true
          name: NameTagSnippetReferencedChecker

  - stage: test_build_docs
    dependsOn: [ scope_check, custom_checks ]
    pool:
      vmImage: 'ubuntu-latest'

    jobs:
      - job: test_build_docs
        condition: or(eq(stageDependencies.scope_check.changes.outputs['CheckDocsChanges.DocsChanged'], true), eq(variables.isDevelop, true), eq(variables.isManual, true))
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
            displayName: 'Use Python 3.8'

          - script: cd docs/docusaurus && yarn install && bash ../build_docs
            displayName: TestBuildDocs
            env:
              NODE_OPTIONS: --max_old_space_size=4096
